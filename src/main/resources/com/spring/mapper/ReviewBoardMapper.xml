<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.ReviewBoardMapper">
	
	<!-- insert -->
	<insert id="insert">
		insert into reviewtbl(bno,review,reviewer,storeid,star) values(seq_review.nextval,#{review},#{reviewer},#{storeid},#{star})
	</insert>
	
	<!-- 댓글 하나 가져오기 : rno 가 일치 -->
	<select id="read" resultType="com.spring.domain.ReviewVO">
		select * from reviewtbl where bno=#{bno}
	</select>
	
	<!-- 댓글 수정 : 댓글 내용만 수정, updatedate, rno가 일치하면 -->
	<update id="update">
		update reviewtbl set review=#{review}, star=#{star}, updatedate=sysdate where bno=#{bno}
	</update>
	
	<!-- 댓글 삭제 : rno 일치하면 -->
	<delete id="delete">
		delete from reviewtbl where bno=#{bno}
	</delete>
	
	<!-- 댓글 페이지 처리 최신순 리스트 출력 -->
	<select id="list" resultType="com.spring.domain.ReviewVO">
	<![CDATA[
		select bno,review,reviewer,storeid,star, reviewdate,updatedate from
		(select /*+INDEX_DESC(reviewtbl reviewtbl_pk)*/ rownum rn,bno,review,reviewer,storeid,star, reviewdate,updatedate
		from reviewtbl where storeid=#{storeid} and bno>0 and rownum <= #{cri.pageNum} * #{cri.amount})
		where rn>(#{cri.pageNum}-1)*#{cri.amount}
		]]>
	</select>
	
		<!-- 댓글 페이지 처리 별점 낮은순중 최신순으로 리스트 출력 -->
	<select id="lowStarList" resultType="com.spring.domain.ReviewVO">
	<![CDATA[
		select bno,review,reviewer,storeid,star, reviewdate,updatedate from
		(select /*+INDEX_DESC(reviewtbl reviewtbl_pk)*/ rownum rn,bno,review,reviewer,storeid,star, reviewdate,updatedate
		from (select * from reviewtbl where storeid=#{storeid} order by star asc, bno desc) 
		where storeid=#{storeid} and bno>0 and rownum <= #{cri.pageNum} * #{cri.amount})
		where rn>(#{cri.pageNum}-1)*#{cri.amount}
		]]>
	</select>
	
		<!-- 댓글 페이지 처리 별점 높은순중 최신순으로 리스트 출력 -->
	<select id="highStarList" resultType="com.spring.domain.ReviewVO">
	<![CDATA[
		select bno,review,reviewer,storeid,star, reviewdate,updatedate from
		(select /*+INDEX_DESC(reviewtbl reviewtbl_pk)*/ rownum rn,bno,review,reviewer,storeid,star, reviewdate,updatedate
		from (select * from reviewtbl where storeid=#{storeid} order by star desc, bno desc) 
		where storeid=#{storeid} and bno>0 and rownum <= #{cri.pageNum} * #{cri.amount})
		where rn>(#{cri.pageNum}-1)*#{cri.amount}
		]]>
	</select>
	
	<!-- 전체 리스트 (별점 뽑기용) 페이지 제거-->
	<select id="starlist" resultType="com.spring.domain.ReviewVO">
		select * from reviewtbl where storeid=#{storeid}
	</select>
	
	<!-- storeid에 대한 전체 댓글 게시물 수 -->
	<select id="getCountByStoreid" resultType="int">
		select count(*) from reviewtbl where storeid=#{storeid}
	</select>
		

</mapper>